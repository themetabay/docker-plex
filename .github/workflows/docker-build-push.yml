name: 'Build and publish docker images (all platforms)'

on: [push]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      IMAGE: themetabay/plex:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Load .env file
        uses: xom9ikk/dotenv@v1.0.2
        with:
          path: /
        
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: dersimn/helloarm  # list of Docker images to use as base name for tags
          tag-sha: false            # add git short SHA as Docker tag, e.g.: sha-12affe0
          tag-latest: false         # disabled here for demonstration purposes
          tag-semver: |
            github-workflow-{{major}}
            github-workflow-{{major}}.{{minor}}
            github-workflow-{{major}}.{{minor}}.{{patch}}
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v5.0.1
          platforms: all
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/386,linux/arm/v7,linux/arm/v6,linux/arm64/v8
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          
      - name: Analyze Image
        id: analyze
        run: |
          docker pull ${{ env.DOCKERHUB_IMAGE }}
          echo "##[set-output name=imagelayers;]`docker history --format "{{.ID}} {{.Size}}" ${{ env.DOCKERHUB_IMAGE }} | wc -l`"
          mkdir mkdir -p .github/badges
          echo "${{ steps.analyze.outputs.imagelayers }}"
          
      - name: Generate Badges
        id: badges
        uses: emibcn/badge-action@v1.2.1
        with:
          label: 'Image Layers'
          status: ${{ steps.analyze.outputs.imagelayers }}
          color: 'blue,555,daf'
          path: '.github/badges/layers.svg'
          
      - name: Push back to branch
        uses: Automattic/action-commit-to-branch@master
        with:
          branch: 'master'
          commit_message: 'PUSH badge to repo'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
